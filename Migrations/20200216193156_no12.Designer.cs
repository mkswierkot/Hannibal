// <auto-generated />
using System;
using CoffeeproofBullet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeproofBullet.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200216193156_no12")]
    partial class no12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.ClientEntriesLeft", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AmountEntries")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("FacilityTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("InfniteAmountOfEntires")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("FacilityTypeID");

                    b.ToTable("ClientEntriesLeft");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alert")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentRequired")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("GroupId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityType");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ContractRelatedGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InformationEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.ToTable("Information");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CashRegistered")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentRegistered")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.SubscriptionElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfEntries")
                        .HasColumnType("int");

                    b.Property<int>("FacilityTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityTypeID");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionElement");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacilityTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityTypeID");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.TrainingEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryRegistered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FreeEntry")
                        .HasColumnType("bit");

                    b.Property<string>("Locker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockerReturned")
                        .HasColumnType("bit");

                    b.Property<string>("OtherEntryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.HasIndex("TrainingID");

                    b.ToTable("TrainingEntry");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.TrainingSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("HourFinishes")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HourStarts")
                        .HasColumnType("time");

                    b.Property<int>("TrainingID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingID");

                    b.ToTable("TrainingSchedule");
                });

            modelBuilder.Entity("CoffeeproofBullet.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClientJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SubscriptionExpired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SubscriptionExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.ClientEntriesLeft", b =>
                {
                    b.HasOne("CoffeeproofBullet.Model.Client", "Client")
                        .WithMany("EntriesLeft")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeproofBullet.Data.Model.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Contract", b =>
                {
                    b.HasOne("CoffeeproofBullet.Model.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId");

                    b.HasOne("CoffeeproofBullet.Data.Model.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Information", b =>
                {
                    b.HasOne("CoffeeproofBullet.Model.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Payment", b =>
                {
                    b.HasOne("CoffeeproofBullet.Model.Client", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeproofBullet.Data.Model.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.SubscriptionElement", b =>
                {
                    b.HasOne("CoffeeproofBullet.Data.Model.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeproofBullet.Data.Model.Subscription", null)
                        .WithMany("SubscriptionElements")
                        .HasForeignKey("SubscriptionId");
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.Training", b =>
                {
                    b.HasOne("CoffeeproofBullet.Data.Model.FacilityType", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.TrainingEntry", b =>
                {
                    b.HasOne("CoffeeproofBullet.Model.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeproofBullet.Data.Model.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeproofBullet.Data.Model.TrainingSchedule", b =>
                {
                    b.HasOne("CoffeeproofBullet.Data.Model.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeproofBullet.Model.Client", b =>
                {
                    b.HasOne("CoffeeproofBullet.Data.Model.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
